{"version":3,"sources":["scripts/main.js"],"names":["appendRow","document","querySelector","removeRow","appendColumn","removeColumn","table","rows","children","rowColChange","button1","button2","childEl","parentEl","item","length","remove","disabled","append","cloneNode","addEventListener","forEach","row"],"mappings":";AAAA,aAkDA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA9CA,IAAMA,EAAYC,SAASC,cAAc,eACnCC,EAAYF,SAASC,cAAc,eACnCE,EAAeH,SAASC,cAAc,kBACtCG,EAAeJ,SAASC,cAAc,kBACtCI,EAAQL,SAASC,cAAc,SAC/BK,EAAOD,EAAME,SAEbC,EAAe,SAACC,EAASC,EAASC,EAASC,GACzCC,IAAAA,EAAOF,EAAQA,EAAQG,OAAS,GAElCL,GAAAA,IAAYP,GAAaO,IAAYL,EASvC,OARAS,EAAKE,cAEkB,IAAnBJ,EAAQG,OACVJ,EAAQM,UAAW,EAEnBP,EAAQO,UAAW,GAMnBP,IAAYV,GAAaU,IAAYN,IACvCS,EAASK,OAAOJ,EAAKK,WAAU,IAER,KAAnBP,EAAQG,OACVJ,EAAQM,UAAW,EAEnBP,EAAQO,UAAW,IAKzBjB,EAAUoB,iBAAiB,QAAS,WAClCX,EAAaT,EAAWG,EAAWI,EAAMD,KAG3CH,EAAUiB,iBAAiB,QAAS,WAClCX,EAAaN,EAAWH,EAAWO,EAAMD,KAG3CF,EAAagB,iBAAiB,QAAS,WACjCb,EAAAA,GAAMc,QAAQ,SAAAC,GAAOb,OAAAA,EAAaL,EACpCC,EAAciB,EAAId,SAAUc,OAGhCjB,EAAae,iBAAiB,QAAS,WACjCb,EAAAA,GAAMc,QAAQ,SAAAC,GAAOb,OAAAA,EAAaJ,EACpCD,EAAckB,EAAId,SAAUc","file":"main.dbdd4330.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write code here\n\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\nconst table = document.querySelector('tBody');\nconst rows = table.children;\n\nconst rowColChange = (button1, button2, childEl, parentEl) => {\n  const item = childEl[childEl.length - 1];\n\n  if (button1 === removeRow || button1 === removeColumn) {\n    item.remove();\n\n    if (childEl.length !== 2) {\n      button2.disabled = false;\n    } else {\n      button1.disabled = true;\n    }\n\n    return;\n  }\n\n  if (button1 === appendRow || button1 === appendColumn) {\n    parentEl.append(item.cloneNode(true));\n\n    if (childEl.length !== 10) {\n      button2.disabled = false;\n    } else {\n      button1.disabled = true;\n    }\n  }\n};\n\nappendRow.addEventListener('click', () => {\n  rowColChange(appendRow, removeRow, rows, table);\n});\n\nremoveRow.addEventListener('click', () => {\n  rowColChange(removeRow, appendRow, rows, table);\n});\n\nappendColumn.addEventListener('click', () => {\n  [...rows].forEach(row => rowColChange(appendColumn,\n    removeColumn, row.children, row));\n});\n\nremoveColumn.addEventListener('click', () => {\n  [...rows].forEach(row => rowColChange(removeColumn,\n    appendColumn, row.children, row));\n});\n"]}